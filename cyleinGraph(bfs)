#include<bits/stdc++.h>
using namespace std;
bool checkforcycle(int t,int n ,vector<int>adj[],vector<int>&visit)
{
    queue<pair<int,int>>q;
    visit[t]=1;
    q.push({t,-1});
   while(!q.empty())
   {
       int  node=q.front().first;
       int  parent =q.front().second;
       q.pop();
       for(auto it:adj[node])
       {
           if(!visit[it])
           {
               visit[it]=1;
               q.push({it,node});
           }
           else if (parent!= it)
           {
               return true;
           }
       }
   }
   return false;
}
bool checkcycle(int n ,vector <int>adj[])
{
    vector<int>visit(n+1,0);
    for(int i=1;i<=n;i++)
    {
        if(!visit[i])
        {
            if(checkforcycle(i,n,adj,visit))
            return true;
        }
    }
    return false;
}
int main()
{
    int n ,m;
    cout<<"Enter the number of nodes and edges\n";
    cin>>n>>m;
    vector<int>adj[n+1];
    cout<<"Enter the edges one by one\n";
    for(int i=0;i<m;i++)
    {
        int u,v;
       cin>>u>>v;
       adj[u].push_back(v);
       adj[v].push_back(u);
    }
    if(checkcycle(n,adj))
    {
        cout<<"THERE EXIST A CYCLE IN THE GRAPH";
    }
    else
    {
        cout<<"NO CYCLE EXIST IN THE GRAPH";
    }
    return 0;
}
